<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 width="100%"
		 height="53">
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import com.enum.TypeEnum;
			import com.events.UIEvent;
			import com.models.UIInstanceInfo;
			import com.structurals.AttributeStructural;
			
			import mx.events.ColorPickerEvent;
			[Bindable]
			public var att:AttributeStructural;

			public function setData(att:AttributeStructural):void
			{
				this.att = att;
				switch (att.type)
				{
					case TypeEnum.bool:
					case TypeEnum.number:
						this.currentState = att.type;
						break;
					default:
						this.currentState = "other";
				}
				if(att.name == "filterColor")
					this.currentState = "color";
			}

			protected function onDataChange(event:Event):void
			{
				var newData:*;

				if(att.name == "filterColor")
					newData = this._picker.value;
				else
				{
					switch (att.type)
					{
						case TypeEnum.bool:
							newData = checkBox.selected;
							break;
						case TypeEnum.number:
							newData = numeric.value;
							break;
						default:
							newData = input.text;
							break;
					}
				}
				att.xml.@value = newData;
				var evt:UIEvent = new UIEvent(UIEvent.ATTRIBUTE_CHANGE);
				evt.changeAttName = att.name;
				evt.changeValue = newData;
				this.dispatchEvent(evt);
			}
			
			public function update(instance:UIInstanceInfo):void
			{
				switch(att.name)
				{
					case "x":
					case "y":
					case "width":
					case "height":
						att.value = instance.displayObj[att.name];
						att.xml.@value = att.value;
						break;
				}
			}

		]]>
	</fx:Script>
	<mx:Label fontFamily="宋体"
			  fontSize="12"
			  text="{att.describe}"
			  width="100%"
			  id="attName"/>
	<mx:states>
		<s:State name="bool"
				 id="bool"/>
		<s:State name="number"
				 id="number"/>
		<s:State name="color"
				 id="color"/>
		<s:State name="other"
				 id="other"/>
	</mx:states>
	<mx:TextInput includeIn="other"
				 width="100%"
				 fontFamily="宋体"
				 fontSize="12"
				 text="{att.value}"
				 change="onDataChange(event)"
				 id="input"/>
	<s:NumericStepper width="100%"
					  includeIn="number"
					  maximum="9999"
					  minimum="-999"
					  value="{att.value}"
					  change="onDataChange(event)"
					  id="numeric"/>
	<s:CheckBox includeIn="bool"
				width="100%"
				change="onDataChange(event)"
				selected="{att.value}"
				id="checkBox"/>
	<mx:ColorPicker includeIn="color"
					width="100%"
					id="_picker"
					change="onDataChange(event)"
					selectedColor="{att.value}"/>
</mx:VBox>
